{"version":3,"file":"index.js","sources":["../../node_modules/@babel/runtime/helpers/classCallCheck.js","../../node_modules/@babel/runtime/helpers/createClass.js","../share/constant.js","dev/index.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","export const START = 'start';\nexport const STOP = 'stop';\nexport const DANMU = 'danmu';\nexport const GIFT = 'gift';\nexport const GUARD = 'guard';\nexport const CONFIG = 'config';\nexport const RECORDING = 'recording';\nexport const DEBUG = 'debug';\nexport const LOG = 'log';\nexport const ERROR = 'error';\nexport const FAIL = 'fail';\nexport const RTMP = 'rtmp';\nexport const STREAM_DISCONNECT = 'stream_disconnect';\nexport const BINARY_STREAM = 'binary_stream';\nexport const BLH = 'blh';\n\nexport const SOCKET_SUCCESS = '建立socket连接成功';\nexport const SOCKET_FAIL = '建立socket连接失败';\nexport const TAB_VIDEO_STREAM_SUCCESS = '获取标签视频流成功';\nexport const TAB_VIDEO_STREAM_FAIL = '无法获取标签视频流，请重试！';\nexport const RECORDER_SUCCESS = '录制器启动成功';\nexport const RECORDER_FAIL = '无法录制标签的视频流，请重试！';\nexport const PUSH_STREAM_ING = '正在推流中...';\nexport const CAN_NOT_FIND_TAB = '未获取到当前激活的标签';\nexport const RTMP_ERROR = '请输入正确的rtmp推流地址';\nexport const STREAM_NAME_ERROR = '请输入正确的直播码';\nexport const SOCKET_ERROR = '请输入正确的中转地址';\nexport const LIVE_ROOM_ERROR = '不是有效B站直播间地址';\nexport const OPEN_SUCCESS = '打开直播间页面成功，保持该页面打开既可以获取弹幕';\nexport const CURRENT_PAGE = '当前页面';\nexport const PUSH_STREAM_END = '已停止推流...';\n\nexport const DEFAULT_RTMP = 'rtmp://bvc.live-send.acg.tv/live-bvc/';\nexport const DEFAULT_SOCKET = 'http://localhost:8080';\nexport const DEFAULT_RESOLUTION = 720;\nexport const DEFAULT_VIDEO_BITSPER = 2500000;\nexport const DEFAULT_AUDIO_BITSPER = 128000;\nexport const MIME_TYPE = 'video/webm; codecs=\"h264, opus\"';\n\nexport const REG_RTMP = /^rtmp:\\/\\/.+/i;\nexport const REG_HTTP = /^https?:\\/\\/.+/i;\nexport const REG_LIVE = /^https?:\\/\\/live\\.bilibili\\.com/i;\n","import { DANMU, GIFT, GUARD, BLH } from '../../share/constant';\n\nfunction query(el, doc = document) {\n    return doc.querySelector(el);\n}\n\nclass Injected {\n    constructor() {\n        if (window.location.href.includes(BLH)) {\n            this.init();\n        }\n    }\n\n    init() {\n        this.getChatHistoryList().then(chatHistoryList => {\n            const observer = new MutationObserver(mutationsList => {\n                mutationsList.forEach(mutations => {\n                    const addedNodes = Array.from(mutations.addedNodes || []);\n                    addedNodes.forEach(item => {\n                        // 弹幕\n                        if (item.classList.contains('danmaku-item')) {\n                            try {\n                                window.postMessage({\n                                    type: DANMU,\n                                    data: {\n                                        uid: Number(item.dataset.uid),\n                                        uname: item.dataset.uname.trim(),\n                                        text: item.dataset.danmaku.trim(),\n                                    },\n                                });\n                            } catch (error) {\n                                //\n                            }\n                        }\n\n                        // 礼物\n                        if (item.classList.contains('gift-item')) {\n                            try {\n                                window.postMessage({\n                                    type: GIFT,\n                                    data: {\n                                        uid: null,\n                                        uname: query('.username', item).innerText.trim(),\n                                        action: query('.action', item).innerText.trim(),\n                                        gift: query('.gift-name', item).innerText.trim(),\n                                        count: query('.count', item).innerText.trim(),\n                                    },\n                                });\n                            } catch (error) {\n                                //\n                            }\n                        }\n\n                        // 上船\n                        if (item.classList.contains('guard-buy')) {\n                            try {\n                                window.postMessage({\n                                    type: GUARD,\n                                    data: {\n                                        uid: null,\n                                        uname: query('.username', item).innerText.trim(),\n                                        action: '购买',\n                                        gift: '舰长',\n                                        count: query('.count', item).innerText.trim(),\n                                    },\n                                });\n                            } catch (error) {\n                                //\n                            }\n                        }\n                    });\n                });\n            });\n            observer.observe(chatHistoryList, { childList: true });\n        });\n\n        this.getPenuryGiftMsg().then(penuryGiftMsg => {\n            const observer = new MutationObserver(mutationsList => {\n                mutationsList.forEach(mutations => {\n                    const addedNodes = Array.from(mutations.addedNodes || []);\n                    addedNodes.forEach(item => {\n                        try {\n                            window.postMessage({\n                                type: GIFT,\n                                data: {\n                                    uname: query('.username', item).innerText.trim(),\n                                    action: query('.action', item).innerText.trim(),\n                                    gift: query('.gift-name', item).innerText.trim(),\n                                    count: query('.count', item).innerText.trim(),\n                                },\n                            });\n                        } catch (error) {\n                            //\n                        }\n                    });\n                });\n            });\n            observer.observe(penuryGiftMsg, { childList: true });\n        });\n    }\n\n    getChatHistoryList() {\n        return new Promise(resolve => {\n            (function loop() {\n                const chatHistoryList = query('#chat-history-list');\n                if (!chatHistoryList) {\n                    setTimeout(loop, 1000);\n                } else {\n                    resolve(chatHistoryList);\n                }\n            })();\n        });\n    }\n\n    getPenuryGiftMsg() {\n        return new Promise(resolve => {\n            (function loop() {\n                const penuryGiftMsg = query('#penury-gift-msg');\n                if (!penuryGiftMsg) {\n                    setTimeout(loop, 1000);\n                } else {\n                    resolve(penuryGiftMsg);\n                }\n            })();\n        });\n    }\n}\n\nexport default new Injected();\n"],"names":["DANMU","GIFT","GUARD","BLH","query","el","doc","document","querySelector","Injected","window","location","href","includes","init","getChatHistoryList","then","chatHistoryList","observer","MutationObserver","mutationsList","forEach","mutations","addedNodes","Array","from","item","classList","contains","postMessage","type","data","uid","Number","dataset","uname","trim","text","danmaku","error","innerText","action","gift","count","observe","childList","getPenuryGiftMsg","penuryGiftMsg","Promise","resolve","loop","setTimeout"],"mappings":"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"}